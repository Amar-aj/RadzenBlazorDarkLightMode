@inherits LayoutComponentBase
@inject NotificationService NotificationService
@inject IJSRuntime JSRuntime
<RadzenComponents />
<RadzenLayout Style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body'">
    <RadzenHeader>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <RadzenLabel Text="Header" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Home" Icon="home" />
            <RadzenPanelMenuItem Text="Users" Icon="account_box" />
        </RadzenPanelMenu>
        <div class="rz-p-4">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
                <RadzenButton Shade="Shade.Lighter" Click=@(args => OnChangeTheme("Light")) Text="Light" ButtonStyle="ButtonStyle.Light" />
                <RadzenButton Shade="Shade.Lighter" Click=@(args => OnChangeTheme("Dark")) Text="Dark" ButtonStyle="ButtonStyle.Dark" />
            </RadzenStack>
        </div>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;
    private void OnChangeTheme(string theme)
    {
        JSRuntime.InvokeVoidAsync("OnClickLightDark", theme);
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked", Detail = theme });
    }
}